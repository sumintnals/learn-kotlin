상속(inheritance)
// 상속이 필요한 경우
- 확장된 클래스를 만들고 싶은 경우
    - class Worrior() -> 기본 클래스
        fun attack(){}
    }
    - class DefenseWarrior(){ -> 확장된 클래스
        fun attack(){}
        fun defense(){}
    }
    - class HarttAtttcakWarrior(){ -> 확장된 클래스
        fun attack(){}
        fun hardAttack(){}
    }
    - 이미 존재하는 클래스를 합칠 때
- 상속은 공통점 찾기가 아니다!!!

- 키워드
 - open이라는 키워드로 설정된 클래스만 상속할 수 있다
 - open키워드는 class 앞에 적어준다
 - final로 설정된 클래스는 상속을 할 수 없다 -> 기본

- 슈퍼클래스(부모클래스)/서브클래스(자식클래스)
- 서브클래스는 슈퍼클래스의 생성을 책임져야한다
- 슈퍼클래스 사용하고 있는 멤버와 동일한 이름의 멤버를 만들 수 없다
- 
- 다중상속 불가능

          defenseManager
----------------------------------
|   -----------                  |
|   | defense |                  |
|   -----------                  |
|                                |
|                -----------     |
|                | defense |     |
|                -----------     |
----------------------------------

